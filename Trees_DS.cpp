// ƒерево - свз€ный граф без циклов.
// Ѕинарное деверо - не более 2 узлов.
// ¬ысота дерева - количество узлов, расположенных на самом длинном пути от корн€ к листу.
// »ногда высоту определ€ют как ребра, а не узлы.
//  орень дерева - это узел у которого нет родительских узлов.
// Ћист - это узел у которого не дочерних узлов.
// ќтсальное - внутренние узлы ил просто узлами.
// ¬ дереве удобно хранить структуры, колторые используют какую-то иерархию.
// ” бинарного дерева есть левый и правый дочерний узел.


/* –ассмотрим бинарное дерево, как и любое дерево может определено рекурсивно.
* “о есть:
  1) ѕустое дерево.
  2) ”зел и два поддерева: T_l , T_r --- бинарные деревь€.
*/

/* ќперации над бинарным деревом:
 1) —оздание пустого.
 2) —оздание бинарного дерева, содержащего один узел, по заданному элементу.
 3) —оздание бинарного дерева по заданному корню и двум бинарным поддеревь€м этого корн€.
 4) ”даление бинарного дерева.
 5) ѕроверка на пустоту.
 6) ќпределение или изменение данных, записанных в корне бинарного дерева.
 7) ѕрисоединение к корню дерева правого или левого дочернего узла.
 8) ѕрисоединениие к корню дерева левого или правого поддерева.
 9) ќтсоединение от корн€ левого или правого поддерева.
 10) ѕолучение копии левого или правого поддерева корн€ бинарного дерева.
*/

#include <iostream>
#include "btree.h"

int main()
{
    std::cout << "Hello World!\n";
}

